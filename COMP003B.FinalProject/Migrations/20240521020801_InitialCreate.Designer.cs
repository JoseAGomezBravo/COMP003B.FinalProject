// <auto-generated />
using System;
using COMP003B.FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace COMP003B.FinalProject.Migrations
{
    [DbContext(typeof(BookSellerContext))]
    [Migration("20240521020801_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("COMP003B.FinalProject.Models.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AuthorId"));

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GenreId")
                        .HasColumnType("int");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("GenreId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Distributor", b =>
                {
                    b.Property<int>("DistributorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DistributorID"));

                    b.Property<string>("DistributorDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DistributorID1")
                        .HasColumnType("int");

                    b.Property<string>("DistributorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PublisherId")
                        .HasColumnType("int");

                    b.HasKey("DistributorID");

                    b.HasIndex("DistributorID1");

                    b.HasIndex("PublisherId");

                    b.ToTable("Distributors");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Genre", b =>
                {
                    b.Property<int>("GenreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreId"));

                    b.Property<string>("GenreDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreId");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Publisher", b =>
                {
                    b.Property<int>("PublisherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PublisherId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("DistributorID")
                        .HasColumnType("int");

                    b.Property<string>("PublisherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PublisherId");

                    b.HasIndex("AuthorId");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Author", b =>
                {
                    b.HasOne("COMP003B.FinalProject.Models.Book", null)
                        .WithMany("Authors")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Book", b =>
                {
                    b.HasOne("COMP003B.FinalProject.Models.Genre", null)
                        .WithMany("Books")
                        .HasForeignKey("GenreId");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Distributor", b =>
                {
                    b.HasOne("COMP003B.FinalProject.Models.Distributor", null)
                        .WithMany("Distributors")
                        .HasForeignKey("DistributorID1");

                    b.HasOne("COMP003B.FinalProject.Models.Publisher", null)
                        .WithMany("Distributors")
                        .HasForeignKey("PublisherId");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Publisher", b =>
                {
                    b.HasOne("COMP003B.FinalProject.Models.Author", null)
                        .WithMany("Publishers")
                        .HasForeignKey("AuthorId");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Author", b =>
                {
                    b.Navigation("Publishers");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Book", b =>
                {
                    b.Navigation("Authors");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Distributor", b =>
                {
                    b.Navigation("Distributors");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Genre", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("COMP003B.FinalProject.Models.Publisher", b =>
                {
                    b.Navigation("Distributors");
                });
#pragma warning restore 612, 618
        }
    }
}
